---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ProjectName:
    Type: String
    Description: プロジェクト名
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stg
      - prd
    Description: 環境(development/staging/production)

Resources:
  ##############################################################################
  # VPC(Remove default security group Ingress/Egress)
  ##############################################################################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  VPCDefaultSecurityGroupEgressRemove:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt VPC.DefaultSecurityGroup
      IpProtocol: icmp
      FromPort: 0
      ToPort: 0
      CidrIp: 127.0.0.1/32
      Description: Effectively no access
  VPCDefaultSecurityGroupIngressRemove:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt VPC.DefaultSecurityGroup
      IpProtocol: icmp
      FromPort: 0
      ToPort: 0
      CidrIp: 127.0.0.1/32
      Description: Effectively no access
  ##############################################################################
  # InternetGatewayとPublicRouteTableの用意(Attach含む)
  ##############################################################################
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  RouteTableForPublicSubnets:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RoutingToInternet:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTableForPublicSubnets
  ##############################################################################
  # Public subnet
  # VPC SubnetとPublic用Route tableの関連付け
  ##############################################################################
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-a-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RouteTableAssociationForPublicSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref RouteTableForPublicSubnets
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-c-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RouteTableAssociationForPublicSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref RouteTableForPublicSubnets
  PublicSubnetD:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1d
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-d-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RouteTableAssociationForPublicSubnetD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetD
      RouteTableId: !Ref RouteTableForPublicSubnets
  ##############################################################################
  # routetable for intra subnets
  ##############################################################################
  RouteTableForIntraSubnets:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-intra-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  ##############################################################################
  # Intra subnet
  # VPC SubnetとIntra用Routetableの関連付け
  ##############################################################################
  IntraSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.10.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-intra-a-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RouteTableAssociationForIntraSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref IntraSubnetA
      RouteTableId: !Ref RouteTableForIntraSubnets
  IntraSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.11.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-intra-c-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RouteTableAssociationForIntraSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref IntraSubnetC
      RouteTableId: !Ref RouteTableForIntraSubnets
  IntraSubnetD:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1d
      CidrBlock: 10.0.12.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-intra-d-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  RouteTableAssociationForIntraSubnetD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref IntraSubnetD
      RouteTableId: !Ref RouteTableForIntraSubnets
  ##############################################################################
  # SecurityGroup for public subnets
  ##############################################################################
  SecurityGroupForPublicSubnets:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub allow-from-internet-for-${ProjectName}-public-subnets-${Environment}
      GroupDescription: 'ex:IGW--sg--ALB,IGW--sg--EC2'
      VpcId: !Ref VPC
      SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort : 80
              ToPort : 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort : 443
              ToPort : 443
              CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub allow-from-internet-for-${ProjectName}-public-subnets-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  ##############################################################################
  # SecurityGroup for public subnets
  ##############################################################################
  SecurityGroupForIntraSubnets:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub allow-from-internet-for-${ProjectName}-intra-subnets-${Environment}
      GroupDescription: 'ex:ALB--sg--FARGATE'
      VpcId: !Ref VPC
      SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort : 80
              ToPort : 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort : 443
              ToPort : 443
              CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub allow-from-internet-for-${ProjectName}-intra-subnets-${Environment}
        - Key: Environment
          Value: !Sub ${Environment}
  ##############################################################################
  # SSM Parameter Store
  ##############################################################################
  ParameterStoreForVpcId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/vpc-id
      Type: String
      Value: !Ref VPC
      Description: 'vpc id'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForPublicSubnetAId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/public-subnet-a-id
      Type: String
      Value: !Ref PublicSubnetA
      Description: 'one of public subnets'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForPublicSubnetCId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/public-subnet-c-id
      Type: String
      Value: !Ref PublicSubnetC
      Description: 'one of public subnets'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForPublicSubnetDId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/public-subnet-d-id
      Type: String
      Value: !Ref PublicSubnetD
      Description: 'one of public subnets'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForIntraSubnetA:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/intra-subnet-a-id
      Type: String
      Value: !Ref IntraSubnetA
      Description: 'one of intra subnets'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForIntraSubnetC:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/intra-subnet-c-id
      Type: String
      Value: !Ref IntraSubnetC
      Description: 'one of intra subnets'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForIntraSubnetD:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/intra-subnet-d-id
      Type: String
      Value: !Ref IntraSubnetD
      Description: 'one of intra subnets'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForSecurityGroupIdForPublicSubnets:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/security-group-id-for-public-subnets
      Type: String
      Value: !Ref SecurityGroupForPublicSubnets
      Description: 'ex:IGW--sg--ALB,IGW--sg--EC2'
      Tags:
        Environment: !Sub ${Environment}
  ParameterStoreForSecurityGroupIdForIntraSubnets:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${ProjectName}/${Environment}/security-group-id-for-intra-subnets
      Type: String
      Value: !Ref SecurityGroupForIntraSubnets
      Description: 'ex:ALB--sg--FARGATE'
      Tags:
        Environment: !Sub ${Environment}
